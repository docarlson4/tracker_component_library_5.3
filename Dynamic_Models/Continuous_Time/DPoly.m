function [D,DJacob,DHess,pDpt]=DPoly(N,q0,order,numDim,omitDims)
%%DPOLY The diffusion matrix for a continuous-time additive noise model in
%       numDim dimensions of motion with order moments of position whereby
%       the noise is only added to the highest-order derivatives of
%       position when used with a linear motion model. When order=1, this 
%       is the continuous white noise acceleration (CWNA) model. When
%       order=2, this is the continuous Wiener process acceleration model
%       (CWPA), also known as the white noise jerk model.
%
%INPUTS: N The number of D matrices to be returned (the third dimension of
%          the D matrix). If an empty matrix is passed, then it is assumed
%          that only one matrix is desired.
%       q0 The power spectral density of the noise for each dimension. If
%          the power spectral density of the noise is the same in all
%          dimensions, the a scalar q0 can be passed.
%    order The order >=0 of the filter. If order=1, then it is constant
%          velocity, 2 means constant acceleration, 3 means constant jerk,
%          etc. If this parameter is omitted, then order=1 is assumed.
%   numDim The number of dimensions of the simulation problem. If the
%          numDim parameter is omitted, then numDim=3 (3D motion) is
%          assumed.
% omitDims The number of dimensions at the end of the state to which noise
%          will not be added. The default if omitted or an empty matrix is
%          passed is 0. This could be useful if tracking in 3D using a 2D
%          state and one does not want to add noise to the final component,
%          because the target is constrained to a flat surface.
%
%OUTPUTS: D The xDimXnumDimXN set of N diffusion matrices of a continuous-
%           time linear additive noise model where the noise is only added
%           to the highest order terms of the state. xDim=(order+1)*numDim.
%           The ith matrix is D(:,:,i) and all numD are the same.
%    DJacob The xDimXnumDimXxDim matrix of first partial derivatives of the
%           elements of D with respect to the state. These are all zero,
%           because D is a constant. It is the same for all D and is not
%           repeated N times.
%     DHess The xDimXnumDimXxDimXxDim matrices of second partial
%           derivatives of the elements of D with respect to the state.
%           These are all zero, because D is a constant. It is the same for
%           all D and is not repeated N times.
%      pDpt The xDimXnumDim partial derivative of D with respect to time.
%           This is all zeros, because D is a constant.
%
%It is assumed that the state is ordered
%[position;velocity;acceleration;etc] for up to order moments of the
%numDim-dimensional position. 
%
%Continuous-time additive noise models are discussed in more detail in [1].
%
%This diffusion matrix corresponds to the discrete-time process noise
%generated by the function QPolyKal.
%
%REFERENCES:
%[1] D. F. Crouse, "Basic tracking using nonlinear continuous-time dynamic
%    models," IEEE Aerospace and Electronic Systems Magazine, vol. 30, no.
%    2, Part II, pp. 4-41, Feb. 2015.
%
%October 2013 David F. Crouse, Naval Research Laboratory, Washington D.C.
%(UNCLASSIFIED) DISTRIBUTION STATEMENT A. Approved for public release.

    %The max allows the user to pass an empty matrix.
    if(isempty(N))
        N=1;
    end

    if(nargin<5||isempty(omitDims))
        omitDims=0;
    end
    
    if(nargin<4||isempty(numDim))
        numDim=3;
    end
    
    if(nargin<3||isempty(order))
       order=1; 
    end
    
    numOmitEls=numDim-omitDims;
    
    if(isscalar(q0))
        q0=ones(numOmitEls,1)*q0;
    end
    
    q0R=sqrt(q0);
    xDim=(order+1)*numDim;
    
    D=zeros(xDim,numOmitEls);
    
    for curDim=1:numOmitEls
        D((xDim-curDim+1-omitDims),numOmitEls-curDim+1)=q0R(numOmitEls-curDim+1);
    end
    
    if(N>1)
       D=repmat(D,[1,1,N]); 
    end
    
    if(nargout>1)
        DJacob=zeros(xDim,numOmitEls,xDim);
        if(nargout>2)
            DHess=zeros(xDim,numOmitEls,xDim,xDim);
            if(nargout>3)
                pDpt=zeros(xDim,numOmitEls);
            end
        end
    end
end

%LICENSE:
%
%The source code is in the public domain and not licensed or under
%copyright. The information and software may be used freely by the public.
%As required by 17 U.S.C. 403, third parties producing copyrighted works
%consisting predominantly of the material produced by U.S. government
%agencies must provide notice with such work(s) identifying the U.S.
%Government material incorporated and stating that such material is not
%subject to copyright protection.
%
%Derived works shall not identify themselves in a manner that implies an
%endorsement by or an affiliation with the Naval Research Laboratory.
%
%RECIPIENT BEARS ALL RISK RELATING TO QUALITY AND PERFORMANCE OF THE
%SOFTWARE AND ANY RELATED MATERIALS, AND AGREES TO INDEMNIFY THE NAVAL
%RESEARCH LABORATORY FOR ALL THIRD-PARTY CLAIMS RESULTING FROM THE ACTIONS
%OF RECIPIENT IN THE USE OF THE SOFTWARE.
